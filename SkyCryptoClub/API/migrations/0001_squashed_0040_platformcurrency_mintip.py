# Generated by Django 3.0.5 on 2020-04-28 18:12

import SkyCryptoClub.API.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    replaces = [('API', '0001_initial'), ('API', '0002_user_id'), ('API', '0003_role_userrole'), ('API', '0004_auto_20200412_0456'), ('API', '0005_auto_20200412_0501'), ('API', '0006_profileban'), ('API', '0007_auto_20200412_0512'), ('API', '0008_auto_20200412_0513'), ('API', '0009_currency_platform_platformcurrency'), ('API', '0010_wallet'), ('API', '0011_account_accountkey'), ('API', '0012_auto_20200412_0839'), ('API', '0013_auto_20200412_0845'), ('API', '0014_ignored'), ('API', '0015_exchange'), ('API', '0016_auto_20200412_0915'), ('API', '0017_profile_avatar'), ('API', '0018_auto_20200415_1259'), ('API', '0019_auto_20200415_1304'), ('API', '0020_faqcategory_question'), ('API', '0021_question_accepted'), ('API', '0022_statistics'), ('API', '0023_statistics_amountbtcreceived'), ('API', '0024_auto_20200420_1112'), ('API', '0025_auto_20200420_1209'), ('API', '0026_auto_20200420_1210'), ('API', '0027_profile_level'), ('API', '0028_delete_ignored'), ('API', '0029_profileban_withdrawban'), ('API', '0030_auto_20200427_1840'), ('API', '0031_founddeposits'), ('API', '0032_auto_20200428_1050'), ('API', '0033_auto_20200428_1051'), ('API', '0034_auto_20200428_1053'), ('API', '0035_auto_20200428_1057'), ('API', '0036_auto_20200428_1057'), ('API', '0037_auto_20200428_1145'), ('API', '0038_auto_20200428_1146'), ('API', '0039_auto_20200428_1150'), ('API', '0040_platformcurrency_mintip')]

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigIntegerField(default=SkyCryptoClub.API.models.Role.setId, primary_key=True, serialize=False)),
                ('name', models.CharField(default=0, max_length=35)),
                ('color', models.CharField(default='#a8a8a8', max_length=7)),
                ('isDefault', models.BooleanField(default=False)),
                ('adminPanel', models.BooleanField(default=False)),
                ('adminStatistics', models.BooleanField(default=False)),
                ('editMemberships', models.BooleanField(default=False)),
                ('createMemberships', models.BooleanField(default=False)),
                ('deleteMemberships', models.BooleanField(default=False)),
                ('addPlatform', models.BooleanField(default=False)),
                ('editPlatform', models.BooleanField(default=False)),
                ('deletePlatform', models.BooleanField(default=False)),
                ('banUser', models.BooleanField(default=False)),
                ('permanentBan', models.BooleanField(default=False)),
                ('editXP', models.BooleanField(default=False)),
                ('editUserMembership', models.BooleanField(default=False)),
                ('addCurrency', models.BooleanField(default=False)),
                ('editCurrency', models.BooleanField(default=False)),
                ('deleteCurrency', models.BooleanField(default=False)),
                ('addBorrowStatus', models.BooleanField(default=False)),
                ('editBorrowStatus', models.BooleanField(default=False)),
                ('removeBorrowStatus', models.BooleanField(default=False)),
                ('editBorrow', models.BooleanField(default=False)),
                ('addExchangeStatus', models.BooleanField(default=False)),
                ('editExchangeStatus', models.BooleanField(default=False)),
                ('removeExchangeStatus', models.BooleanField(default=False)),
                ('editExchange', models.BooleanField(default=False)),
                ('addFAQCategory', models.BooleanField(default=False)),
                ('editFAQCategory', models.BooleanField(default=False)),
                ('removeFAQCategory', models.BooleanField(default=False)),
                ('approveFAQ', models.BooleanField(default=False)),
                ('addAccount', models.BooleanField(default=False)),
                ('editAccount', models.BooleanField(default=False)),
                ('createRole', models.BooleanField(default=False)),
                ('editRole', models.BooleanField(default=False)),
                ('removeRole', models.BooleanField(default=False)),
                ('assignRole', models.BooleanField(default=False)),
                ('moderationPanel', models.BooleanField(default=False)),
                ('banExchange', models.BooleanField(default=False)),
                ('banBorrow', models.BooleanField(default=False)),
                ('banLend', models.BooleanField(default=False)),
                ('closeExchange', models.BooleanField(default=False)),
                ('closeBorrow', models.BooleanField(default=False)),
                ('viewTickets', models.BooleanField(default=False)),
                ('respondTickets', models.BooleanField(default=False)),
                ('closeTickets', models.BooleanField(default=False)),
                ('addFAQ', models.BooleanField(default=False)),
                ('editFAQ', models.BooleanField(default=False)),
                ('removeFAQ', models.BooleanField(default=False)),
                ('viewUserBorrows', models.BooleanField(default=False)),
                ('viewUserLendings', models.BooleanField(default=False)),
                ('viewUserProfile', models.BooleanField(default=False)),
                ('viewUserExchanges', models.BooleanField(default=False)),
                ('viewExchange', models.BooleanField(default=False)),
                ('viewBorrow', models.BooleanField(default=False)),
                ('viewUserBalance', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileBan',
            fields=[
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='API.Profile')),
                ('totalBan', models.BooleanField(default=False)),
                ('exchangeBan', models.BooleanField(default=False)),
                ('borrowBan', models.BooleanField(default=False)),
                ('lendBan', models.BooleanField(default=False)),
                ('banDue', models.DateTimeField(default=django.utils.timezone.now)),
                ('withdrawBan', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('name', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('largeName', models.CharField(max_length=35)),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=35, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='AccountKey',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('key', models.CharField(default=SkyCryptoClub.API.models.AccountKey.setKey, max_length=35)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.Account')),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=35)),
                ('active', models.BooleanField(default=False)),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.Platform')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.Profile')),
            ],
            options={
                'unique_together': {('profile', 'platform', 'username')},
            },
        ),
        migrations.CreateModel(
            name='PlatformCurrency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.Currency')),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.Platform')),
                ('minTip', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
            ],
            options={
                'unique_together': {('platform', 'currency')},
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.Profile')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.Role')),
            ],
            options={
                'unique_together': {('profile', 'role')},
            },
        ),
        migrations.CreateModel(
            name='PasswordToken',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('key', models.CharField(default=SkyCryptoClub.API.models.PasswordToken.setKey, max_length=35)),
                ('valid_until', models.DateTimeField(default=SkyCryptoClub.API.models.PasswordToken.setValid)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('publicId', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=35, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('id', models.BigIntegerField(default=SkyCryptoClub.API.models.User.setId)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TwoFactorLogin',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('key', models.CharField(default=SkyCryptoClub.API.models.TwoFactorLogin.setKey, max_length=35)),
                ('valid_until', models.DateTimeField(default=SkyCryptoClub.API.models.TwoFactorLogin.setValid)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FAQCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=35, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category', to='API.FAQCategory')),
                ('accepted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Statistics',
            fields=[
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='API.Profile')),
                ('numberBTCSent', models.DecimalField(decimal_places=8, default=0, max_digits=15)),
                ('numberBTCReceived', models.DecimalField(decimal_places=8, default=0, max_digits=15)),
                ('amountBTCSent', models.DecimalField(decimal_places=8, default=0, max_digits=15)),
                ('numberETHSent', models.DecimalField(decimal_places=8, default=0, max_digits=15)),
                ('amountETHSent', models.DecimalField(decimal_places=8, default=0, max_digits=15)),
                ('numberETHReceived', models.DecimalField(decimal_places=8, default=0, max_digits=15)),
                ('amountETHReceived', models.DecimalField(decimal_places=8, default=0, max_digits=15)),
                ('numberLTCSent', models.DecimalField(decimal_places=8, default=0, max_digits=16)),
                ('amountLTCSent', models.DecimalField(decimal_places=8, default=0, max_digits=16)),
                ('numberLTCReceived', models.DecimalField(decimal_places=8, default=0, max_digits=16)),
                ('amountLTCReceived', models.DecimalField(decimal_places=8, default=0, max_digits=16)),
                ('numberXDGSent', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('amountXDGSent', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('numberXDGReceived', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('amountXDGReceived', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('numberBCHSent', models.DecimalField(decimal_places=8, default=0, max_digits=15)),
                ('amountBCHSent', models.DecimalField(decimal_places=8, default=0, max_digits=15)),
                ('numberBCHReceived', models.DecimalField(decimal_places=8, default=0, max_digits=15)),
                ('amountBCHReceived', models.DecimalField(decimal_places=8, default=0, max_digits=15)),
                ('numberXRPSent', models.DecimalField(decimal_places=8, default=0, max_digits=19)),
                ('amountXRPSent', models.DecimalField(decimal_places=8, default=0, max_digits=19)),
                ('numberXRPReceived', models.DecimalField(decimal_places=8, default=0, max_digits=19)),
                ('amountXRPReceived', models.DecimalField(decimal_places=8, default=0, max_digits=19)),
                ('numberTRXSent', models.DecimalField(decimal_places=8, default=0, max_digits=18)),
                ('amountTRXSent', models.DecimalField(decimal_places=8, default=0, max_digits=18)),
                ('numberTRXReceived', models.DecimalField(decimal_places=8, default=0, max_digits=18)),
                ('amountTRXReceived', models.DecimalField(decimal_places=8, default=0, max_digits=18)),
                ('amountBTCReceived', models.DecimalField(decimal_places=8, default=0, max_digits=15)),
                ('totalExchangesSent', models.BigIntegerField(default=0)),
                ('totalExchangesStarted', models.BigIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Exchange',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('from_amount', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('to_amount', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creator_user', to='API.Profile')),
                ('exchanged_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exchanger_user', to='API.Profile')),
                ('from_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_currency', to='API.PlatformCurrency')),
                ('to_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_currency', to='API.PlatformCurrency')),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.Profile')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.PlatformCurrency')),
            ],
            options={
                'unique_together': {('profile', 'store')},
            },
        ),
        migrations.CreateModel(
            name='FoundDeposit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.Profile')),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.Platform')),
                ('tipId', models.CharField(max_length=40)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.Account')),
            ],
            options={
                'unique_together': {('tipId', 'account', 'platform')},
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('xp', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
                ('publicStats', models.BooleanField(default=True)),
                ('publicLevel', models.BooleanField(default=True)),
                ('publicXP', models.BooleanField(default=True)),
                ('publicName', models.BooleanField(default=True)),
                ('avatar', models.ImageField(default='default_avatar.jpg', upload_to='')),
                ('level', models.BigIntegerField(default=0)),
            ],
        ),
    ]
